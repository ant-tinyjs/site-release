(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{534:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"纹理缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#纹理缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 纹理缓存")]),s("p",[t._v("因为 Pixi 是使用 WebGL 在 GPU 上渲染图片，所以图片需要转成 GPU 能够处理的类型，即 "),s("code",[t._v("texture")]),t._v("。要让精灵显示一张图片，你需要转换原始图片为 WebGL 的纹理类型。为了保证性能和速度，渲染引擎使用纹理缓存（"),s("code",[t._v("TextureCache")]),t._v("）来存储所有精灵所需要的纹理。这些纹理的名字就是引用的图片链接。所以，如果一个纹理已经通过相对链接 "),s("code",[t._v("'images/ant.png'")]),t._v(" 加载，你就可以在纹理缓存里找到它：")]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" antTexture "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Tiny"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TextureCache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'images/ant.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("纹理会以 WebGL 支持的格式存储起来，并有效的被渲染出来，你可以用这个纹理通过 "),s("code",[t._v("Tiny.Sprite")]),t._v(" 类来创建一个精灵：")]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" antSprite "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tiny"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sprite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("antTexture"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}],!1,null,null,null);a.default=n.exports}}]);